# application.properties (común a todos los perfiles)

## --- Aplicación ---
spring.application.name=cjc-documentos

spring.security.oauth2.resourceserver.jwt.issuer-uri=${CJC_AUTH_ISSUER_URI}

## --- Almacenamiento de ficheros ---
# directorio base para fotos de perfil y documentos
app.storage.images-dir=${ruta.almacenamiento.imagenes}
app.storage.docs-dir=${ruta.almacenamiento.documentos}
app.fotos-perfil.dir=C:/cjc/fotos-perfil

# expone esas carpetas como recursos estáticos
spring.web.resources.static-locations=\
  file:${app.storage.images-dir},\
  file:${app.storage.docs-dir}

## --- Límites de subida ---
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

## --- Fotos de perfil por defecto ---
custom.foto.perfil.chica=defecto-chica
custom.foto.perfil.chico=defecto-chico

## --- URIs de servicios (se rellenan por perfil o env) ---
cjc.front=
cjc.auth=
cjc.rest=
cjc.documentos=

## --- Claves públicas y privadas ---
keys.public.path=classpath:keys/public.key
keys.private.path=classpath:keys/private.key

## Datos de conexión a BD (se sobreescriben por perfil/env)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver


# Config JPA/Hibernate
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
